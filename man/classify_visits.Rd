% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/classify.R
\name{classify_visits}
\alias{classify_visits}
\title{Classify visits by matching to a list of classes}
\usage{
classify_visits(
  wt,
  classes,
  match_by = "domain",
  regex_on = NULL,
  return_rows_by = NULL,
  return_rows_val = NULL
)
}
\arguments{
\item{wt}{webtrack data object.}

\item{classes}{a data.table containing classes that can be matched to visits.}

\item{match_by}{character. Whether to match list entries from \code{classes} to
the domain of a visit (\code{"domain"}) or the host (\code{"host"}) with an exact match;
or with a regular expression against the whole URL of a visit (\code{"regex"}).
If set to \code{"domain"} or \code{"host"}, both \code{"wt"} and \code{"classes"} need to have
a column called accordingly. If set to \code{"regex"}, the \code{"url"} column of \code{"wt"}
will be used, and you need to set \code{"regex_on"} to the column in \code{"classes"}
for which to do the regex matching. Defaults to \code{"domain"}.}

\item{regex_on}{character. Column in "classes" on which to do the regex matching. Defaults to NULL.}

\item{return_rows_by}{character. A column in "classes" on which to subset the joined data.}

\item{return_rows_val}{character. The value of the columns specified in "return_rows_by", for which
data should be returned.}
}
\value{
webtrack data.table with the same columns as wt and any column in classes except the "match_by" column.
}
\description{
\code{classify_visits()} categorizes visits by either extracting the visit URL's
domain or host and matching them to a list of domains or hosts;
or by matching a list of regular expressions against the visit URL.
}
\examples{
\dontrun{
data("testdt_tracking")
data("domain_list")
wt <- as.wt_dt(testdt_tracking)
wt_domains <- extract_domain(wt, drop_na = F)
wt_classes <- classify_visits(wt_domains, classes = domain_list, match_by = "domain")
domain_list$host <- domain_list$domain
wt_hosts <- extract_host(wt, drop_na = F)
wt_classes <- classify_visits(wt_hosts, classes = domain_list, match_by = "host")
data("domain_list")
regex_list <- domain_list[type == "newsportals"]
wt_classes <- classify_visits(wt, classes = regex_list, match_by = "regex", regex_on = "domain")
}
}
